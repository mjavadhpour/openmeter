name: Artifacts

on:
  workflow_call:
    inputs:
      publish:
        description: Publish artifacts to the artifact store
        default: false
        required: false
        type: boolean
    outputs:
      container-image-name:
        description: Container image name
        value: ${{ jobs.container-image.outputs.name }}
      container-image-digest:
        description: Container image digest
        value: ${{ jobs.container-image.outputs.digest }}
      container-image-tag:
        description: Container image tag
        value: ${{ jobs.container-image.outputs.tag }}
      container-image-ref:
        description: Container image ref
        value: ${{ jobs.container-image.outputs.ref }}

permissions:
  contents: read

jobs:
  container-image:
    name: Container image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
    outputs:
      name: ${{ steps.image-name.outputs.value }}
      digest: ${{ steps.build.outputs.digest }}
      tag: ${{ steps.meta.outputs.version }}
      ref: ${{ steps.image-ref.outputs.value }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up QEMU and Buildx for multi-platform builds on GitHub runners
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: inputs.publish
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image name
        id: image-name
        run: echo "value=mjhpour/openmeter" >> "$GITHUB_OUTPUT"

      - name: Gather build metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image-name.outputs.value }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch,suffix=-{{sha}}-{{date 'X'}},enable={{is_default_branch}}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.publish }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          # Enable caching to speed up builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set image ref
        id: image-ref
        run: echo "value=${{ steps.image-name.outputs.value }}@${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"

  # ---
  
  benthos-collector-container-image:
    name: Benthos Collector Container image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
    outputs:
      name: ${{ steps.image-name.outputs.value }}
      digest: ${{ steps.build.outputs.digest }}
      tag: ${{ steps.meta.outputs.version }}
      ref: ${{ steps.image-ref.outputs.value }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up QEMU and Buildx for multi-platform builds on GitHub runners
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: inputs.publish
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image name
        id: image-name
        run: echo "value=mjhpour/benthos-collector" >> "$GITHUB_OUTPUT"

      - name: Gather build metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image-name.outputs.value }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch,suffix=-{{sha}}-{{date 'X'}},enable={{is_default_branch}}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: benthos-collector.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.publish }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          # Enable caching to speed up builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set image ref
        id: image-ref
        run: echo "value=${{ steps.image-name.outputs.value }}@${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"