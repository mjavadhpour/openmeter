name: Artifacts

on:
  workflow_call:
    inputs:
      publish:
        description: Publish artifacts to the artifact store
        default: false
        required: false
        type: boolean

jobs:
  container-image:
    name: Container image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write

    outputs:
      name: ${{ steps.image-name.outputs.value }}
      digest: ${{ steps.build.outputs.digest }}
      tag: ${{ steps.meta.outputs.version }}
      ref: ${{ steps.image-ref.outputs.value }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Set image name
        id: image-name
        run: echo "value=mjhpour/openmeter" >> "$GITHUB_OUTPUT"

      - name: Gather build metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ steps.image-name.outputs.value }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set image ref
        id: image-ref
        run: echo "value=${{ steps.image-name.outputs.value }}:${{ steps.meta.outputs.version }}" >> "$GITHUB_OUTPUT"

      - name: Determine build output
        uses: haya14busa/action-cond@v1.2.1
        id: build-output
        with:
          cond: ${{ inputs.publish }}
          if_true: type=image,push=true
          if_false: type=oci,dest=image.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v3.2.0
        if: inputs.publish
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6.2.0
        with:
          context: .
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,ignore-error=true
          outputs: ${{ steps.build-output.outputs.value }}

  benthos-collector-container-image:
    name: Benthos Collector Container image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write

    outputs:
      name: ${{ steps.image-name.outputs.value }}
      digest: ${{ steps.build.outputs.digest }}
      tag: ${{ steps.meta.outputs.version }}
      ref: ${{ steps.image-ref.outputs.value }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Set image name
        id: image-name
        run: echo "value=mjhpour/benthos-collector" >> "$GITHUB_OUTPUT"

      - name: Gather build metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ steps.image-name.outputs.value }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch,suffix=-{{sha}}-{{date 'X'}},enable={{is_default_branch}}

      - name: Set image ref
        id: image-ref
        run: echo "value=${{ steps.image-name.outputs.value }}:${{ steps.meta.outputs.version }}" >> "$GITHUB_OUTPUT"

      - name: Determine build output
        uses: haya14busa/action-cond@v1.2.1
        id: build-output
        with:
          cond: ${{ inputs.publish }}
          if_true: type=image,push=true
          if_false: type=oci,dest=image.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v3.2.0
        if: inputs.publish
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6.2.0
        with:
          context: .
          file: benthos-collector.Dockerfile
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,ignore-error=true
          outputs: ${{ steps.build-output.outputs.value }}
